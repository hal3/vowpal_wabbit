Enabling FTRL based optimization
Algorithm used: Proximal-FTRL
ftrl_alpha = 0.005
ftrl_beta = 0.1
Num weight bits = 20
learning rate = 0.5
initial_t = 0
power_t = 0.5
creating cache_file = train-sets/wsj_small.dparser.vw.gz.cache
Reading datafile = train-sets/wsj_small.dparser.vw.gz
num sources = 1
average    since      instance            current true      current predicted   cur   cur   predic    cache  examples          
loss       last        counter           output prefix          output prefix  pass   pol     made     hits    gener  beta    
1.959183   1.959183          1  [43:1 5:2 5:2 5:2 1..] [0:8 1:1 2:1 3:1 4:..]     0     0       96        0       96  0.000950
1.879592   1.800000          2  [2:2 3:5 0:8 3:7 3:4 ] [0:8 1:3 1:3 1:3 1:3 ]     0     0      104        0      104  0.001029

finished run
number of examples per pass = 2
passes used = 1
weighted example sum = 2
weighted label sum = 0
average loss = 1.87959
total feature number = 31137
